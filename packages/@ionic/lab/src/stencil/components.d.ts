/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface IonlabApp {

    }

    interface IonlabDeviceFrame {
      'icon': string;
      'platform': string;
      'platformName': string;
      'url': string;
    }

    interface IonlabPlatformDropdown {
      'activePlatforms': string[];
    }

    interface IonlabPreview {
      'activeDevices': string[];
      'url': string;
    }

    interface IonlabSidebar {
      'visible': boolean;
    }

    interface SkFadingCircle {

    }
  }


    interface HTMLIonlabAppElement extends StencilComponents.IonlabApp, HTMLStencilElement {}

    var HTMLIonlabAppElement: {
      prototype: HTMLIonlabAppElement;
      new (): HTMLIonlabAppElement;
    };
    

    interface HTMLIonlabDeviceFrameElement extends StencilComponents.IonlabDeviceFrame, HTMLStencilElement {}

    var HTMLIonlabDeviceFrameElement: {
      prototype: HTMLIonlabDeviceFrameElement;
      new (): HTMLIonlabDeviceFrameElement;
    };
    

    interface HTMLIonlabPlatformDropdownElement extends StencilComponents.IonlabPlatformDropdown, HTMLStencilElement {}

    var HTMLIonlabPlatformDropdownElement: {
      prototype: HTMLIonlabPlatformDropdownElement;
      new (): HTMLIonlabPlatformDropdownElement;
    };
    

    interface HTMLIonlabPreviewElement extends StencilComponents.IonlabPreview, HTMLStencilElement {}

    var HTMLIonlabPreviewElement: {
      prototype: HTMLIonlabPreviewElement;
      new (): HTMLIonlabPreviewElement;
    };
    

    interface HTMLIonlabSidebarElement extends StencilComponents.IonlabSidebar, HTMLStencilElement {}

    var HTMLIonlabSidebarElement: {
      prototype: HTMLIonlabSidebarElement;
      new (): HTMLIonlabSidebarElement;
    };
    

    interface HTMLSkFadingCircleElement extends StencilComponents.SkFadingCircle, HTMLStencilElement {}

    var HTMLSkFadingCircleElement: {
      prototype: HTMLSkFadingCircleElement;
      new (): HTMLSkFadingCircleElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'ionlab-app': JSXElements.IonlabAppAttributes;
    'ionlab-device-frame': JSXElements.IonlabDeviceFrameAttributes;
    'ionlab-platform-dropdown': JSXElements.IonlabPlatformDropdownAttributes;
    'ionlab-preview': JSXElements.IonlabPreviewAttributes;
    'ionlab-sidebar': JSXElements.IonlabSidebarAttributes;
    'sk-fading-circle': JSXElements.SkFadingCircleAttributes;
    }
  }

  namespace JSXElements {

    export interface IonlabAppAttributes extends HTMLAttributes {

    }

    export interface IonlabDeviceFrameAttributes extends HTMLAttributes {
      'icon'?: string;
      'platform'?: string;
      'platformName'?: string;
      'url'?: string;
    }

    export interface IonlabPlatformDropdownAttributes extends HTMLAttributes {
      'activePlatforms'?: string[];
      'onIonlabPlatformToggled'?: (event: CustomEvent) => void;
    }

    export interface IonlabPreviewAttributes extends HTMLAttributes {
      'activeDevices'?: string[];
      'url'?: string;
    }

    export interface IonlabSidebarAttributes extends HTMLAttributes {
      'onIonlabSidebarCloseClicked'?: (event: CustomEvent) => void;
      'visible'?: boolean;
    }

    export interface SkFadingCircleAttributes extends HTMLAttributes {

    }
  }

  interface HTMLElementTagNameMap {
    'ionlab-app': HTMLIonlabAppElement
    'ionlab-device-frame': HTMLIonlabDeviceFrameElement
    'ionlab-platform-dropdown': HTMLIonlabPlatformDropdownElement
    'ionlab-preview': HTMLIonlabPreviewElement
    'ionlab-sidebar': HTMLIonlabSidebarElement
    'sk-fading-circle': HTMLSkFadingCircleElement
  }

  interface ElementTagNameMap {
    'ionlab-app': HTMLIonlabAppElement;
    'ionlab-device-frame': HTMLIonlabDeviceFrameElement;
    'ionlab-platform-dropdown': HTMLIonlabPlatformDropdownElement;
    'ionlab-preview': HTMLIonlabPreviewElement;
    'ionlab-sidebar': HTMLIonlabSidebarElement;
    'sk-fading-circle': HTMLSkFadingCircleElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

