version: 2

build_steps: &build_steps
  - checkout
  - restore_cache:
      key: dependency-cache-{{ checksum "package.json" }}
  - restore_cache:
      key: dependency-cache-{{ checksum "packages/ionic/package.json" }}
  - restore_cache:
      key: dependency-cache-{{ checksum "packages/@ionic/cli-utils/package.json" }}
  - restore_cache:
      key: dependency-cache-{{ checksum "packages/@ionic/cli-plugin-proxy/package.json" }}
  - restore_cache:
      key: dependency-cache-{{ checksum "packages/@ionic/cli-scripts/package.json" }}
  - run: npm install
  - save_cache:
      key: dependency-cache-{{ checksum "package.json" }}
      paths:
        - node_modules
  - run: npm run bootstrap
  - save_cache:
      key: dependency-cache-{{ checksum "packages/ionic/package.json" }}
      paths:
        - packages/ionic/node_modules
  - save_cache:
      key: dependency-cache-{{ checksum "packages/@ionic/cli-utils/package.json" }}
      paths:
        - packages/@ionic/cli-utils/node_modules
  - save_cache:
      key: dependency-cache-{{ checksum "packages/@ionic/cli-plugin-proxy/package.json" }}
      paths:
        - packages/@ionic/cli-plugin-proxy/node_modules
  - save_cache:
      key: dependency-cache-{{ checksum "packages/@ionic/cli-scripts/package.json" }}
      paths:
        - packages/@ionic/cli-scripts/node_modules

jobs:
  build:
    docker:
      - image: circleci/node:6
    steps:
      - *build_steps
      - run: npm run lint
      - run: npm run test

  publish:
    docker:
      - image: circleci/node:6
    steps:
      - *build_steps
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: npm run publish:canary -- --yes

workflows:
  version: 2
  build:
    jobs:
      - build
  build_and_publish:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: master
